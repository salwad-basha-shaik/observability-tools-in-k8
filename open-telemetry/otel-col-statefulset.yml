apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    meta.helm.sh/release-name: my-opentelemetry-collector
    meta.helm.sh/release-namespace: open-telemetry
  creationTimestamp: "2024-06-03T18:20:37Z"
  generation: 2
  labels:
    app.kubernetes.io/instance: my-opentelemetry-collector
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: opentelemetry-collector
    app.kubernetes.io/version: 0.101.0
    helm.sh/chart: opentelemetry-collector-0.92.0
  name: my-opentelemetry-collector
  namespace: open-telemetry
  resourceVersion: "78934"
  #uid: 79abbec5-c539-4586-9d70-dc172a4540de
spec:
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Retain
  podManagementPolicy: Parallel
  replicas: 5
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-opentelemetry-collector
      app.kubernetes.io/name: opentelemetry-collector
      component: statefulset-collector
  serviceName: my-opentelemetry-collector
  template:
    metadata:
      annotations:
        checksum/config: ab963709e02878dddddb5e5551057a8f97cfde552c03de9c3bc2299a2b4f7ae6
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: my-opentelemetry-collector
        app.kubernetes.io/name: opentelemetry-collector
        component: statefulset-collector
    spec:
      containers:
      - args:
        - --config=/conf/relay.yaml
        env:
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        image: otel/opentelemetry-collector-k8s:0.101.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 13133
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: opentelemetry-collector
        ports:
        - containerPort: 6831
          name: jaeger-compact
          protocol: UDP
        - containerPort: 14250
          name: jaeger-grpc
          protocol: TCP
        - containerPort: 14268
          name: jaeger-thrift
          protocol: TCP
        - containerPort: 4317
          name: otlp
          protocol: TCP
        - containerPort: 4318
          name: otlp-http
          protocol: TCP
        - containerPort: 9411
          name: zipkin
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 13133
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /conf
          name: opentelemetry-collector-configmap
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: my-opentelemetry-collector
      serviceAccountName: my-opentelemetry-collector
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          items:
          - key: relay
            path: relay.yaml
          name: my-opentelemetry-collector-statefulset
        name: opentelemetry-collector-configmap
  updateStrategy:
    type: RollingUpdate
